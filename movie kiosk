//allows me to use scanner and random
import java.util.Scanner;
import java.util.Random;

public class IS147projectcode {
    public static void main(String[] args) {
        //makes the seating chart and sets the scanner
        Scanner scanner = new Scanner(System.in);
        Cinema cinema = new Cinema(7, 4);
        //list of movie names and times
        String[] movies = {"Wolf of Wall Street", "Cars 2", "Spiderman 2", "Godzilla 1954", "Project X"};
        String[] movieTimes = {"10:00am", "12:30pm", "4:00pm", "9:30pm"};
        
        //displays all the movies to the user
        System.out.println("Choose which movie you would like to watch");
        for (int i = 0; i < movies.length; i++) {
            System.out.println((i + 1) + ". " + movies[i]);
        }
        
        //has the user select the movie
        int selectedMovie;
        do {
            System.out.print("Enter the movie number: ");
            selectedMovie = scanner.nextInt();
        } while (selectedMovie < 1 || selectedMovie > movies.length);
        
        //displays all the movie times
        System.out.println("Choose a movie time:");
        for (int i = 0; i < movieTimes.length; i++) {
            System.out.println((i + 1) + ". " + movieTimes[i]);
        }
        
        //has the user select the movie time
        int selectedTime;
        do {
            System.out.print("Enter the time number: ");
            selectedTime = scanner.nextInt();
        } while (selectedTime < 1 || selectedTime > movieTimes.length);
        
        //shows what you selected
        System.out.println("\nYou selected: " + movies[selectedMovie - 1] + " at " + movieTimes[selectedTime - 1]);
        
        //This sections asks the user to input what seat they would like to book and sees if the input is vaild or not, if it is vaild the seat is booked and 
        //the avaliable seats are updated and the user is asked if they want to book anothr or not, if the selection is invalid the user is asked to enter a vaild one.
         boolean bookAnotherSeat;

        do {
            cinema.displayAvailableSeats();

            String selectedSeat;
            boolean validSeat;

            do {
                System.out.print("\nEnter the seat you want to book (like A1, B2, C3...): ");
                selectedSeat = scanner.next();
                validSeat = cinema.bookSeat(selectedSeat);
                if (!validSeat) {
                    System.out.println("That seat is already taken or invalid, try again!");
                }
            } while (!validSeat);
            
            cinema.displayAvailableSeats();
            
             // Ask the user if they want to keep booking
            System.out.print("Would you like to book another seat? (yes/no): ");
            bookAnotherSeat = vaildInput(scanner);
        } while (bookAnotherSeat);

        System.out.println("Thank you for booking your seats!");
    }

    private static boolean vaildInput(Scanner scanner) {
        String input;
        do {
            System.out.print("Please enter 'yes' or 'no': ");
            input = scanner.next().toLowerCase();
        } while (!input.equals("yes") && !input.equals("no"));

        return input.equals("yes");
    }
}

//calculates the total number of avaialbe seats and randomaizes them.  
class Cinema {
    private int[][] seats; //array for seats
    private int totalAvailableSeats;

    public Cinema(int rows, int seatsPerRow) {
        seats = new int[rows][seatsPerRow];
        initializeSeats();
        totalAvailableSeats = rows * seatsPerRow;
    }
    
    //sets seats as either avaialbe or booked
    private void initializeSeats() {
        Random random = new Random();
        for (int i = 0; i < seats.length; i++) {
            for (int j = 0; j < seats[i].length; j++) {
                seats[i][j] = random.nextInt(2); 
            }
        }
    }
    
    //displays the labels of the chart
     public void displayAvailableSeats() {
        System.out.println("Seat Chart:");
        System.out.print("  ");
        for (char ch = 'A'; ch < 'A' + seats.length; ch++) {
            System.out.print(ch + " ");
        }
        System.out.println();
        //assings x's and o's for seats
        for (int i = 0; i < seats[0].length; i++) {
            System.out.print((i + 1) + " ");
            for (int j = 0; j < seats.length; j++) {
                if (seats[j][i] == 0) {
                    System.out.print("O ");
                } else {
                    System.out.print("X ");
                }
            }
            System.out.println();
        }
        //legend and the calulator that shows how many seats are avalaible. 
        System.out.println("Reminder: O - Available Seat, X - Booked Seat");
        System.out.println("Available Seats: " + totalAvailableSeats);
    }

     public boolean bookSeat(String seat) {
    if (seat.length() < 2 || !Character.isLetter(seat.charAt(0))) {
        System.out.println("Invalid seat format. Please enter both row and seat number.");
        return false;
    }

    char rowLetter = Character.toUpperCase(seat.charAt(0));
    int row = rowLetter - 'A';

    int seatNumber = 0;
    int multiplier = 1;
    for (int i = seat.length() - 1; i > 0; i--) {
        char digit = seat.charAt(i);
        if (!Character.isDigit(digit)) {
            System.out.println("Invalid seat format. Please enter both row and seat number.");
            return false;
        }
        seatNumber += (digit - '0') * multiplier;
        multiplier *= 10;
    }

    //Check if the seat is within the valid range
    if (row < 0 || row >= seats.length || seatNumber < 1 || seatNumber > seats[row].length) {
        System.out.println("Invalid seat. Please enter a valid row and seat number.");
        return false;
    }

    //Check if the requested seat is available
    if (seats[row][seatNumber - 1] == 1) {
        System.out.println("Sorry, the seat at row " + rowLetter + ", seat " + seatNumber + " is already booked.");
        return false;
    }

    //Book the requested seat
    seats[row][seatNumber - 1] = 1;
    totalAvailableSeats--;

    System.out.println("Successfully booked seat at row " + rowLetter + ", seat " + seatNumber + ".");
    return true;
}
}
